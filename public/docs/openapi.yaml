openapi: 3.0.3
info:
  title: 'We Link'
  description: 'The We Link Project APIs Documentation'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/status:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: Okay
      tags:
        - Endpoints
      security: []
  /api/checkStatus:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Database not configure'
                properties:
                  error:
                    type: string
                    example: 'Database not configure'
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: 'Login API'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: qui
                password:
                  type: string
                  description: ''
                  example: praesentium
                user_type:
                  type: string
                  description: ''
                  example: voluptatum
                device_id:
                  type: string
                  description: ''
                  example: sed
                device_type:
                  type: string
                  description: ''
                  example: nisi
                device_token:
                  type: string
                  description: ''
                  example: magni
              required:
                - email
                - password
                - user_type
                - device_id
                - device_type
                - device_token
      security: []
  /api/register:
    post:
      summary: 'User Registration Process.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: veniam
                lname:
                  type: string
                  description: ''
                  example: quos
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: wskeabqbhnyffxebhzdxskjnmvplfgptozibjyapm
                phone:
                  type: string
                  description: ''
                  example: hic
                password:
                  type: string
                  description: ''
                  example: totam
                c_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: est
                user_type:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 1
                category:
                  type: string
                  description: 'This field is required when <code>user_type</code> is <code>1</code>.'
                  example: null
                address:
                  type: string
                  description: 'This field is required when <code>user_type</code> is <code>0</code>.'
                  example: null
                city:
                  type: string
                  description: 'This field is required when <code>user_type</code> is <code>1</code>.'
                  example: null
                state:
                  type: string
                  description: 'This field is required when <code>user_type</code> is <code>1</code>.'
                  example: null
                zipcode:
                  type: string
                  description: 'This field is required when <code>user_type</code> is <code>1</code>.'
                  example: null
              required:
                - fname
                - lname
                - email
                - phone
                - password
                - c_password
                - user_type
      security: []
  '/api/email/verify/{token}':
    get:
      summary: 'Verifying User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: 'Invalid/Expired url provided.'
                properties:
                  msg:
                    type: string
                    example: 'Invalid/Expired url provided.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: odit
        required: true
        schema:
          type: string
  /api/email/resend:
    post:
      summary: 'Resending Email for email verification.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: kzxfpfoidkochdseyhaxkqgjzpekuaxcvkvtvtxwaazbnvhbhjxicfidfssj
                user_type:
                  type: string
                  description: ''
                  example: fugiat
              required:
                - email
                - user_type
      security: []
  /api/social-login:
    post:
      summary: 'Social Authentication API.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_type:
                  type: string
                  description: ''
                  example: voluptates
                socialproviderid:
                  type: string
                  description: ''
                  example: aperiam
                socialprovidertype:
                  type: string
                  description: ''
                  example: nam
                device_id:
                  type: string
                  description: ''
                  example: itaque
                device_type:
                  type: string
                  description: ''
                  example: unde
                device_token:
                  type: string
                  description: ''
                  example: delectus
              required:
                - user_type
                - socialproviderid
                - socialprovidertype
                - device_id
                - device_type
                - device_token
      security: []
  /api/social-signup:
    post:
      summary: 'Social Sign UP'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: possimus
                lname:
                  type: string
                  description: ''
                  example: qui
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: otqewpqdxnsgoayroklpglbrnyhiypkivwflmoabpeiovtfcdrerfdartyc
                user_type:
                  type: string
                  description: ''
                  example: vitae
                socialproviderid:
                  type: string
                  description: ''
                  example: iste
                socialprovidertype:
                  type: string
                  description: ''
                  example: rerum
                email_verification:
                  type: string
                  description: ''
                  example: quas
              required:
                - fname
                - lname
                - email
                - user_type
                - socialproviderid
                - socialprovidertype
                - email_verification
      security: []
  /api/forgot-password:
    post:
      summary: 'Forgot Password API'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ddicki@example.net
                user_type:
                  type: string
                  description: ''
                  example: sint
              required:
                - email
                - user_type
      security: []
  '/api/find/{token}':
    get:
      summary: 'Find token password reset'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'This password reset token is invalid.'
                properties:
                  message:
                    type: string
                    example: 'This password reset token is invalid.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  /api/password-reset:
    post:
      summary: 'Reset password'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: magnus75@example.com
                password:
                  type: string
                  description: 'Must be at least 8 characters. Must not be greater than 32 characters.'
                  example: mmpxyyaqugiszfh
                token:
                  type: string
                  description: ''
                  example: suscipit
              required:
                - email
                - password
                - token
      security: []
  /api/test:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Hello
                properties:
                  message:
                    type: string
                    example: Hello
      tags:
        - Endpoints
      security: []
  /api/search-taguser:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user-account:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/update-profile:
    post:
      summary: 'Updating User Profile and other details.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: quae
                lname:
                  type: string
                  description: ''
                  example: similique
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mosciski.zion@example.org
                phone:
                  type: string
                  description: ''
                  example: corrupti
                address:
                  type: string
                  description: ''
                  example: et
                city:
                  type: string
                  description: ''
                  example: cupiditate
                state:
                  type: string
                  description: ''
                  example: sit
                category:
                  type: string
                  description: ''
                  example: consequatur
                zipcode:
                  type: number
                  description: ''
                  example: 2869428.0
                bio:
                  type: string
                  description: ''
                  example: maiores
                latitude:
                  type: number
                  description: 'Must be between -90 and 90.'
                  example: 59
                longitude:
                  type: number
                  description: 'Must be between -90 and 90.'
                  example: -72
                preference_location:
                  type: string
                  description: 'The preference_location must be value of "IN_HOME", "BUSINESS_LOCATION", "BOTH".'
                  example: IN_HOME
                is_in_home_service:
                  type: boolean
                  description: 'The flag for ON or OFF.'
                  example: true
                service_location_lat:
                  type: number
                  description: 'The latitude for the service location.'
                  example: 399.4
                service_location_long:
                  type: number
                  description: 'The latitude for the service location.'
                  example: 98.31835
                avatar:
                  type: string
                  format: binary
                  description: 'User Profile Photo [OPTIONAL].'
              required:
                - preference_location
      security: []
  /api/change-password:
    post:
      summary: 'Change password API'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: ''
                  example: est
                password:
                  type: string
                  description: ''
                  example: repellendus
                c_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: aperiam
              required:
                - old_password
                - password
                - c_password
      security: []
  /api/logout:
    post:
      summary: 'Logout API'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/provider/graphdata:
    get:
      summary: 'Provider Month Wise Earning.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/earning:
    get:
      summary: 'Provider Earnings'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/earninglist:
    get:
      summary: 'Providers Earning List'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/viewlist:
    get:
      summary: 'Provider View List'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/paymentreport:
    get:
      summary: 'Email Provider Payment Report.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/detailview:
    post:
      summary: 'Provider View Details'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: ''
                  example: qui
              required:
                - customerId
      security: []
  /api/search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/filter:
    get:
      summary: 'Filter based searching service providers'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/details:
    post:
      summary: 'Fetch User Details'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 6
                user_type:
                  type: integer
                  description: ''
                  example: 5
              required:
                - user_id
                - user_type
      security: []
  /api/user/ratings:
    post:
      summary: 'User Rating Listing'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: debitis
                user_type:
                  type: string
                  description: ''
                  example: neque
              required:
                - user_id
                - user_type
      security: []
  /api/user/notifications:
    get:
      summary: 'User Notifications'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/upload-image:
    post:
      summary: 'Portfolio updates.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/portfolio/{id}/delete':
    delete:
      summary: 'Delete portfolio by id.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the portfolio.'
        example: 1
        required: true
        schema:
          type: integer
  /api/portfolio/show:
    get:
      summary: 'My Portfolio'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/portfolio/{id}':
    get:
      summary: 'Portfolio Details'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the portfolio.'
        example: 1
        required: true
        schema:
          type: integer
  /api/portfolio:
    post:
      summary: 'Fetch Portfolio data.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - userid
      security: []
  /api/portfolio/reactionlist:
    post:
      summary: 'Reactions List'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo_id:
                  type: string
                  description: ''
                  example: beatae
              required:
                - photo_id
      security: []
  /api/portfolio/comments:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/portfolio/reaction:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo_id:
                  type: string
                  description: ''
                  example: sed
                reaction_type:
                  type: string
                  description: ''
                  example: beatae
              required:
                - photo_id
                - reaction_type
      security: []
  /api/service/create:
    post:
      summary: 'Create Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/service/{serviceId}/edit':
    post:
      summary: 'Update Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: quod
        required: true
        schema:
          type: string
  /api/service/rating:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/service/{id}':
    get:
      summary: 'Get Service by ID'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the service.'
        example: velit
        required: true
        schema:
          type: string
  /api/allservices:
    get:
      summary: 'Getting All Active services'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/review/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/reviewlist/{user_type}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_type
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  /api/community/hashtag:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/gethashes:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/community/post:
    post:
      summary: 'Creating a post'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: animi
                status:
                  type: number
                  description: ''
                  example: 32.651611
                categoriesid:
                  type: string
                  description: ''
                  example: animi
              required:
                - description
                - status
                - categoriesid
      security: []
  /api/shareprofile:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                  description: ''
                  example: reiciendis
              required:
                - providerId
      security: []
  '/api/community/{category}/{keyword}':
    get:
      summary: 'Getting Posts'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: keyword
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ad
  '/api/postDetail/{postid}':
    get:
      summary: 'Post Details API.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: postid
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/post_countview/{postid}':
    get:
      summary: 'Returning post view counts'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: postid
        description: ''
        example: quis
        required: true
        schema:
          type: string
  /api/post/search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/post/reactionlist:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postid:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - postid
      security: []
  /api/community/comment:
    post:
      summary: 'Post Community'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/community/postreaction:
    post:
      summary: 'Post Reaction.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postid:
                  type: string
                  description: ''
                  example: iste
                reactionType:
                  type: string
                  description: ''
                  example: magnam
              required:
                - postid
                - reactionType
      security: []
  /api/community/commentreaction:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commentid:
                  type: string
                  description: ''
                  example: aut
                reactionType:
                  type: string
                  description: ''
                  example: ut
              required:
                - commentid
                - reactionType
      security: []
  '/api/comment/{postid}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: postid
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/childcomment/{commentid}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: commentid
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  /api/provider/available:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/createavailable:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/provider/{id}/availability':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the provider.'
        example: recusandae
        required: true
        schema:
          type: string
  /api/provider/booking:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/provider/re-booking:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/customer/allbookings:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/customer/activebookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/customer/canceledbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/customer/pastbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/customer/currentbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/customer/futurebookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/allbookings:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/activebookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/canceledbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/pastbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/currentbookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/provider/futurebookingLists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/booking/cancel:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/checkin:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/checkout:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/checkinupdate:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/checkoutupdate:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingid:
                  type: string
                  description: ''
                  example: est
              required:
                - bookingid
      security: []
  /api/booking/listbydate:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/booking/search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/booking/available:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                providerId:
                  type: string
                  description: ''
                  example: nihil
                booking_at:
                  type: string
                  description: ''
                  example: assumenda
                durationInMins:
                  type: string
                  description: ''
                  example: sit
              required:
                - providerId
                - booking_at
                - durationInMins
      security: []
  '/api/booking/{bookingid}/details':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: bookingid
        description: ''
        example: ut
        required: true
        schema:
          type: string
  /api/netpayout:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/payaccount/status:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/stripeconnectid:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/setcard:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/cards:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/cardsave:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/holdpurchase:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/capturecharges:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingid:
                  type: string
                  description: ''
                  example: quod
              required:
                - bookingid
      security: []
  /api/getbalance:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/refundamount:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingid:
                  type: string
                  description: ''
                  example: est
                charge_id:
                  type: string
                  description: ''
                  example: vitae
                amount:
                  type: string
                  description: ''
                  example: sed
              required:
                - bookingid
                - charge_id
                - amount
      security: []
  /api/category/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  description: ''
                  example: voluptates
              required:
                - category_name
      security: []
  /api/categories:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/channel/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/deletechannel:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/accesstoken:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: esse
              required:
                - userId
      security: []
  /api/chatlist:
    get:
      summary: 'Get Chat List'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/updatechat:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/call/start:
    get:
      summary: 'Start Call API'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver:
                  type: string
                  description: ''
                  example: delectus
                type:
                  type: string
                  description: ''
                  example: non
              required:
                - receiver
                - type
      security: []
  /api/admin/login:
    post:
      summary: adminLogin
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: non
                password:
                  type: string
                  description: ''
                  example: aperiam
              required:
                - email
                - password
      security: []
  '/api/admin/profile/{id}':
    get:
      summary: 'Fetch admin user from id'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update admin profile'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/admin/topproviders:
    get:
      summary: topProviders
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/topcustomers:
    get:
      summary: topCustomers
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/top-services:
    get:
      summary: topServices
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/totalbookings:
    get:
      summary: totalBookings
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/activeuserscount:
    get:
      summary: activeUsersCount
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/platformearning:
    get:
      summary: platformEarning
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/customers:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: tempora
                lname:
                  type: string
                  description: ''
                  example: blanditiis
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jett.wolff@example.net
                phone:
                  type: string
                  description: 'Must be between 8 and 10 digits.'
                  example: '55755917'
                address:
                  type: string
                  description: ''
                  example: architecto
                city:
                  type: string
                  description: ''
                  example: et
                state:
                  type: string
                  description: ''
                  example: perferendis
                zipcode:
                  type: string
                  description: ''
                  example: quidem
                bio:
                  type: string
                  description: ''
                  example: aut
              required:
                - fname
                - lname
                - email
                - phone
                - address
                - city
                - state
                - zipcode
                - bio
      security: []
  /api/admin/customers/create:
    get:
      summary: 'Show the form for creating a new resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/customers/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: rerum
                lname:
                  type: string
                  description: ''
                  example: sed
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: idibbert@example.net
                phone:
                  type: string
                  description: 'Must be between 8 and 10 digits.'
                  example: '87969172'
                address:
                  type: string
                  description: ''
                  example: autem
                city:
                  type: string
                  description: ''
                  example: consequatur
                state:
                  type: string
                  description: ''
                  example: et
                zipcode:
                  type: string
                  description: ''
                  example: adipisci
                bio:
                  type: string
                  description: ''
                  example: explicabo
                active:
                  type: string
                  description: ''
                  example: nobis
              required:
                - fname
                - lname
                - email
                - phone
                - address
                - city
                - state
                - zipcode
                - bio
                - active
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: sit
        required: true
        schema:
          type: string
  '/api/admin/customers/{customer}/edit':
    get:
      summary: 'Show the form for editing the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer
        description: 'The customer.'
        example: dolores
        required: true
        schema:
          type: string
  '/api/admin/customers-partial-update/{id}':
    put:
      summary: 'Update Customer status partial data'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customers partial update.'
        example: delectus
        required: true
        schema:
          type: string
  /api/admin/bookings:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/bookings/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: string
                  description: ''
                  example: perferendis
                price:
                  type: string
                  description: ''
                  example: dolores
                booked_at:
                  type: string
                  description: 'Must be a date after <code>today</code>.'
                  example: '2092-02-06'
                start_at:
                  type: string
                  description: 'Must be a date after <code>today</code>.'
                  example: '2050-10-30'
                end_at:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>. Must be a date after <code>start_at</code>.'
                  example: '2042-11-30'
              required:
                - duration
                - price
                - booked_at
                - start_at
                - end_at
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the booking.'
        example: ipsam
        required: true
        schema:
          type: string
  /api/admin/providers:
    get:
      summary: "getProviders\nDisplay a listing of the resource."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: voluptatem
                lname:
                  type: string
                  description: ''
                  example: voluptatem
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: white.wendy@example.net
                phone:
                  type: string
                  description: 'Must be between 8 and 10 digits.'
                  example: '8977125548'
                address:
                  type: string
                  description: ''
                  example: dolorem
                city:
                  type: string
                  description: ''
                  example: aut
                state:
                  type: string
                  description: ''
                  example: tempora
                zipcode:
                  type: string
                  description: ''
                  example: aut
                bio:
                  type: string
                  description: ''
                  example: reiciendis
                category:
                  type: string
                  description: ''
                  example: animi
              required:
                - fname
                - lname
                - email
                - phone
                - address
                - city
                - state
                - zipcode
                - bio
      security: []
  /api/admin/providers/create:
    get:
      summary: 'Show the form for creating a new resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/providers/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fname:
                  type: string
                  description: ''
                  example: aspernatur
                lname:
                  type: string
                  description: ''
                  example: reiciendis
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: allie73@example.org
                phone:
                  type: string
                  description: 'Must be between 8 and 10 digits.'
                  example: '2105548431'
                address:
                  type: string
                  description: ''
                  example: iusto
                city:
                  type: string
                  description: ''
                  example: ad
                state:
                  type: string
                  description: ''
                  example: et
                zipcode:
                  type: string
                  description: ''
                  example: vero
                bio:
                  type: string
                  description: ''
                  example: et
                active:
                  type: string
                  description: ''
                  example: assumenda
                category:
                  type: string
                  description: ''
                  example: voluptates
              required:
                - fname
                - lname
                - email
                - phone
                - address
                - city
                - state
                - zipcode
                - bio
                - active
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the provider.'
        example: quis
        required: true
        schema:
          type: string
  '/api/admin/providers/{provider}/edit':
    get:
      summary: 'Show the form for editing the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: provider
        description: 'The provider.'
        example: doloremque
        required: true
        schema:
          type: string
  '/api/admin/providers-partial-update/{id}':
    put:
      summary: 'Update Provider status partial data'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the providers partial update.'
        example: porro
        required: true
        schema:
          type: string
  /api/admin/paymentlogs:
    get:
      summary: "getPaymentlogs converted to index\nDisplay a listing of the resource."
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/transactions:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/reports:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/service/{serviceId}/delete':
    delete:
      summary: 'Service Delete'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: similique
        required: true
        schema:
          type: string
  /api/send:
    get:
      summary: 'Sending Notification'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Argument 1 passed to Twilio\Jwt\AccessToken::__construct() must be of the type string, null given, called in /var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php on line 46'
                  exception: TypeError
                  file: /var/www/html/projects/linkme/api/vendor/twilio/sdk/src/Twilio/Jwt/AccessToken.php
                  line: 21
                  trace:
                    -
                      file: /var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php
                      line: 46
                      function: __construct
                      class: Twilio\Jwt\AccessToken
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: sendNotification
                      class: App\Http\Controllers\API\CommunicationController
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 239
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 196
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 685
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 41
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 59
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 687
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 662
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 628
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 617
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/app/Http/Middleware/Cors.php
                      line: 18
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/fruitcake/laravel-cors/src/HandleCors.php
                      line: 52
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Fruitcake\Cors\HandleCors
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/fideloper/proxy/src/TrustProxies.php
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Fideloper\Proxy\TrustProxies
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php
                      line: 63
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 140
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 109
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 123
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 80
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 56
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 55
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 37
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 596
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 134
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/symfony/console/Command/Command.php
                      line: 298
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 121
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                      line: 1024
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 93
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/html/projects/linkme/api/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Argument 1 passed to Twilio\Jwt\AccessToken::__construct() must be of the type string, null given, called in /var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php on line 46'
                  exception:
                    type: string
                    example: TypeError
                  file:
                    type: string
                    example: /var/www/html/projects/linkme/api/vendor/twilio/sdk/src/Twilio/Jwt/AccessToken.php
                  line:
                    type: integer
                    example: 21
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php
                        line: 46
                        function: __construct
                        class: Twilio\Jwt\AccessToken
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: sendNotification
                        class: App\Http\Controllers\API\CommunicationController
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 239
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 196
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 685
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 41
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 59
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 687
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 662
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 628
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 617
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/app/Http/Middleware/Cors.php
                        line: 18
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/fruitcake/laravel-cors/src/HandleCors.php
                        line: 52
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Fruitcake\Cors\HandleCors
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/fideloper/proxy/src/TrustProxies.php
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Fideloper\Proxy\TrustProxies
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php
                        line: 63
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 140
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 109
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 123
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 80
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 56
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 55
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 37
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 596
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 134
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/symfony/console/Command/Command.php
                        line: 298
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 121
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                        line: 1024
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/symfony/console/Application.php
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 93
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/html/projects/linkme/api/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sender:
                  type: string
                  description: ''
                  example: natus
                receiver:
                  type: string
                  description: ''
                  example: autem
                type:
                  type: string
                  description: ''
                  example: omnis
              required:
                - sender
                - receiver
                - type
      security: []
tags:
  -
    name: Endpoints
    description: ''
