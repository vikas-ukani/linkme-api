name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/status
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: Okay
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '598'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/checkStatus
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 400
        content: '{"error":"Database not configure"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '597'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Login API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: voluptatum
        type: string
        custom: []
      device_id:
        name: device_id
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      device_type:
        name: device_type
        description: ''
        required: true
        example: nisi
        type: string
        custom: []
      device_token:
        name: device_token
        description: ''
        required: true
        example: magni
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'User Registration Process.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: veniam
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: quos
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: wskeabqbhnyffxebhzdxskjnmvplfgptozibjyapm
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: hic
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: totam
        type: string
        custom: []
      c_password:
        name: c_password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: est
        type: string
        custom: []
      user_type:
        name: user_type
        description: 'Must be between 0 and 1.'
        required: true
        example: 1
        type: number
        custom: []
      category:
        name: category
        description: 'This field is required when <code>user_type</code> is <code>1</code>.'
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: 'This field is required when <code>user_type</code> is <code>0</code>.'
        required: false
        example: null
        type: string
        custom: []
      city:
        name: city
        description: 'This field is required when <code>user_type</code> is <code>1</code>.'
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: 'This field is required when <code>user_type</code> is <code>1</code>.'
        required: false
        example: null
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: 'This field is required when <code>user_type</code> is <code>1</code>.'
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/email/verify/{token}'
    metadata:
      title: 'Verifying User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: odit
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"msg":"Invalid\/Expired url provided."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '596'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/email/resend
    metadata:
      title: 'Resending Email for email verification.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: kzxfpfoidkochdseyhaxkqgjzpekuaxcvkvtvtxwaazbnvhbhjxicfidfssj
        type: string
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: fugiat
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/social-login
    metadata:
      title: 'Social Authentication API.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_type:
        name: user_type
        description: ''
        required: true
        example: voluptates
        type: string
        custom: []
      socialproviderid:
        name: socialproviderid
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
      socialprovidertype:
        name: socialprovidertype
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      device_id:
        name: device_id
        description: ''
        required: true
        example: itaque
        type: string
        custom: []
      device_type:
        name: device_type
        description: ''
        required: true
        example: unde
        type: string
        custom: []
      device_token:
        name: device_token
        description: ''
        required: true
        example: delectus
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/social-signup
    metadata:
      title: 'Social Sign UP'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: possimus
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: otqewpqdxnsgoayroklpglbrnyhiypkivwflmoabpeiovtfcdrerfdartyc
        type: string
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      socialproviderid:
        name: socialproviderid
        description: ''
        required: true
        example: iste
        type: string
        custom: []
      socialprovidertype:
        name: socialprovidertype
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      email_verification:
        name: email_verification
        description: ''
        required: true
        example: quas
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      title: 'Forgot Password API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ddicki@example.net
        type: string
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: sint
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/find/{token}'
    metadata:
      title: 'Find token password reset'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 404
        content: '{"message":"This password reset token is invalid."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '595'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/password-reset
    metadata:
      title: 'Reset password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: magnus75@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters. Must not be greater than 32 characters.'
        required: true
        example: mmpxyyaqugiszfh
        type: string
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/test
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Hello"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '599'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/search-taguser
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '598'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user-account
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/update-profile
    metadata:
      title: 'Updating User Profile and other details.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: false
        example: quae
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: false
        example: similique
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: mosciski.zion@example.org
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: corrupti
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: et
        type: string
        custom: []
      city:
        name: city
        description: ''
        required: false
        example: cupiditate
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: sit
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: false
        example: consequatur
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: ''
        required: false
        example: 2869428.0
        type: number
        custom: []
      bio:
        name: bio
        description: ''
        required: false
        example: maiores
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: false
        example: 59
        type: number
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -90 and 90.'
        required: false
        example: -72
        type: number
        custom: []
      preference_location:
        name: preference_location
        description: 'The preference_location must be value of "IN_HOME", "BUSINESS_LOCATION", "BOTH".'
        required: true
        example: IN_HOME
        type: string
        custom: []
      is_in_home_service:
        name: is_in_home_service
        description: 'The flag for ON or OFF.'
        required: false
        example: true
        type: boolean
        custom: []
      service_location_lat:
        name: service_location_lat
        description: 'The latitude for the service location.'
        required: false
        example: 399.4
        type: number
        custom: []
      service_location_long:
        name: service_location_long
        description: 'The latitude for the service location.'
        required: false
        example: 98.31835
        type: number
        custom: []
      avatar:
        name: avatar
        description: 'User Profile Photo [OPTIONAL].'
        required: false
        example: null
        type: file
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/change-password
    metadata:
      title: 'Change password API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: ''
        required: true
        example: est
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      c_password:
        name: c_password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: aperiam
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'Logout API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/graphdata
    metadata:
      title: 'Provider Month Wise Earning.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '597'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/earning
    metadata:
      title: 'Provider Earnings'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '596'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/earninglist
    metadata:
      title: 'Providers Earning List'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '595'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/viewlist
    metadata:
      title: 'Provider View List'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '594'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/paymentreport
    metadata:
      title: 'Email Provider Payment Report.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '593'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/provider/detailview
    metadata:
      title: 'Provider View Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      customerId:
        name: customerId
        description: ''
        required: true
        example: qui
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/search
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '592'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/filter
    metadata:
      title: 'Filter based searching service providers'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '591'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/details
    metadata:
      title: 'Fetch User Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 6
        type: integer
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: 5
        type: integer
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/ratings
    metadata:
      title: 'User Rating Listing'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      user_type:
        name: user_type
        description: ''
        required: true
        example: neque
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/notifications
    metadata:
      title: 'User Notifications'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '590'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/upload-image
    metadata:
      title: 'Portfolio updates.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/portfolio/{id}/delete'
    metadata:
      title: 'Delete portfolio by id.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the portfolio.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/portfolio/show
    metadata:
      title: 'My Portfolio'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '589'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/portfolio/{id}'
    metadata:
      title: 'Portfolio Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the portfolio.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '588'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/portfolio
    metadata:
      title: 'Fetch Portfolio data.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      userid:
        name: userid
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/portfolio/reactionlist
    metadata:
      title: 'Reactions List'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      photo_id:
        name: photo_id
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/portfolio/comments
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/portfolio/reaction
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      photo_id:
        name: photo_id
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      reaction_type:
        name: reaction_type
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/service/create
    metadata:
      title: 'Create Service'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/service/{serviceId}/edit'
    metadata:
      title: 'Update Service'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      serviceId:
        name: serviceId
        description: ''
        required: true
        example: quod
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/service/rating
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/service/{id}'
    metadata:
      title: 'Get Service by ID'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: velit
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '587'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/allservices
    metadata:
      title: 'Getting All Active services'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '586'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/review/create
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/reviewlist/{user_type}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_type:
        name: user_type
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/community/hashtag
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/gethashes
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '585'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/community/post
    metadata:
      title: 'Creating a post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      description:
        name: description
        description: ''
        required: true
        example: animi
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: 32.651611
        type: number
        custom: []
      categoriesid:
        name: categoriesid
        description: ''
        required: true
        example: animi
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/shareprofile
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      providerId:
        name: providerId
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/community/{category}/{keyword?}'
    metadata:
      title: 'Getting Posts'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category:
        name: category
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
      keyword:
        name: keyword
        description: ''
        required: false
        example: ad
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '584'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/postDetail/{postid}'
    metadata:
      title: 'Post Details API.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postid:
        name: postid
        description: ''
        required: true
        example: iste
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '583'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/post_countview/{postid}'
    metadata:
      title: 'Returning post view counts'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postid:
        name: postid
        description: ''
        required: true
        example: quis
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '582'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/post/search
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '581'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/post/reactionlist
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      postid:
        name: postid
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/community/comment
    metadata:
      title: 'Post Community'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/community/postreaction
    metadata:
      title: 'Post Reaction.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      postid:
        name: postid
        description: ''
        required: true
        example: iste
        type: string
        custom: []
      reactionType:
        name: reactionType
        description: ''
        required: true
        example: magnam
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/community/commentreaction
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      commentid:
        name: commentid
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      reactionType:
        name: reactionType
        description: ''
        required: true
        example: ut
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/comment/{postid}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      postid:
        name: postid
        description: ''
        required: true
        example: illum
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '580'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/childcomment/{commentid}'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentid:
        name: commentid
        description: ''
        required: true
        example: repudiandae
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '579'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/available
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '578'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/provider/createavailable
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/provider/{id}/availability'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the provider.'
        required: true
        example: recusandae
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '577'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/provider/booking
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/provider/re-booking
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/allbookings
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '576'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/activebookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '575'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/canceledbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '574'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/pastbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '573'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/currentbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '572'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/customer/futurebookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '571'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/allbookings
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '570'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/activebookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '569'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/canceledbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '568'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/pastbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '567'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/currentbookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '599'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/provider/futurebookingLists
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '598'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/booking/cancel
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/checkin
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '597'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/checkout
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '596'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/checkinupdate
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/checkoutupdate
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      bookingid:
        name: bookingid
        description: ''
        required: true
        example: est
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/booking/listbydate
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/booking/search
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '595'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/booking/available
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      providerId:
        name: providerId
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      booking_at:
        name: booking_at
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      durationInMins:
        name: durationInMins
        description: ''
        required: true
        example: sit
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/booking/{bookingid}/details'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      bookingid:
        name: bookingid
        description: ''
        required: true
        example: ut
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '594'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/netpayout
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '593'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/payaccount/status
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '592'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/stripeconnectid
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '591'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/setcard
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '590'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/cards
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '589'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/cardsave
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/holdpurchase
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/capturecharges
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      bookingid:
        name: bookingid
        description: ''
        required: true
        example: quod
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/getbalance
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '588'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/refundamount
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      bookingid:
        name: bookingid
        description: ''
        required: true
        example: est
        type: string
        custom: []
      charge_id:
        name: charge_id
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: sed
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/category/create
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      category_name:
        name: category_name
        description: ''
        required: true
        example: voluptates
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '587'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/channel/create
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/deletechannel
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/accesstoken
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: esse
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/chatlist
    metadata:
      title: 'Get Chat List'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '586'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/updatechat
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/call/start
    metadata:
      title: 'Start Call API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      receiver:
        name: receiver
        description: ''
        required: true
        example: delectus
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: non
        type: string
        custom: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '585'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/login
    metadata:
      title: adminLogin
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: non
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/profile/{id}'
    metadata:
      title: 'Fetch admin user from id'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: molestiae
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '584'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/profile/{id}'
    metadata:
      title: 'Update admin profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: et
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/topproviders
    metadata:
      title: topProviders
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '583'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/topcustomers
    metadata:
      title: topCustomers
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '582'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/top-services
    metadata:
      title: topServices
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '581'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/totalbookings
    metadata:
      title: totalBookings
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '580'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/activeuserscount
    metadata:
      title: activeUsersCount
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '579'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/platformearning
    metadata:
      title: platformEarning
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '578'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/customers
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '577'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/customers/create
    metadata:
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '576'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/customers
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: blanditiis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jett.wolff@example.net
        type: string
        custom: []
      phone:
        name: phone
        description: 'Must be between 8 and 10 digits.'
        required: true
        example: '55755917'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: architecto
        type: string
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: et
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: perferendis
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: ''
        required: true
        example: quidem
        type: string
        custom: []
      bio:
        name: bio
        description: ''
        required: true
        example: aut
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/customers/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: sit
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '575'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/customers/{customer}/edit'
    metadata:
      title: 'Show the form for editing the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer:
        name: customer
        description: 'The customer.'
        required: true
        example: dolores
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '574'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/customers/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: omnis
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: idibbert@example.net
        type: string
        custom: []
      phone:
        name: phone
        description: 'Must be between 8 and 10 digits.'
        required: true
        example: '87969172'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: autem
        type: string
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: et
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: ''
        required: true
        example: adipisci
        type: string
        custom: []
      bio:
        name: bio
        description: ''
        required: true
        example: explicabo
        type: string
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: nobis
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/customers/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: saepe
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/customers-partial-update/{id}'
    metadata:
      title: 'Update Customer status partial data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customers partial update.'
        required: true
        example: delectus
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/bookings
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '573'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/bookings/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the booking.'
        required: true
        example: ipsam
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '572'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/bookings/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the booking.'
        required: true
        example: blanditiis
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      duration:
        name: duration
        description: ''
        required: true
        example: perferendis
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      booked_at:
        name: booked_at
        description: 'Must be a date after <code>today</code>.'
        required: true
        example: '2092-02-06'
        type: string
        custom: []
      start_at:
        name: start_at
        description: 'Must be a date after <code>today</code>.'
        required: true
        example: '2050-10-30'
        type: string
        custom: []
      end_at:
        name: end_at
        description: 'Must be a valid date in the format <code>H:i:s</code>. Must be a date after <code>start_at</code>.'
        required: true
        example: '2042-11-30'
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/bookings/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the booking.'
        required: true
        example: repellendus
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/providers
    metadata:
      title: |-
        getProviders
        Display a listing of the resource.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '571'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/providers/create
    metadata:
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '570'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/providers
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: white.wendy@example.net
        type: string
        custom: []
      phone:
        name: phone
        description: 'Must be between 8 and 10 digits.'
        required: true
        example: '8977125548'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: dolorem
        type: string
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      bio:
        name: bio
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: false
        example: animi
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/providers/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the provider.'
        required: true
        example: quis
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '569'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/providers/{provider}/edit'
    metadata:
      title: 'Show the form for editing the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      provider:
        name: provider
        description: 'The provider.'
        required: true
        example: doloremque
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '568'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/providers/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the provider.'
        required: true
        example: quo
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      lname:
        name: lname
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: allie73@example.org
        type: string
        custom: []
      phone:
        name: phone
        description: 'Must be between 8 and 10 digits.'
        required: true
        example: '2105548431'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: iusto
        type: string
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: et
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: ''
        required: true
        example: vero
        type: string
        custom: []
      bio:
        name: bio
        description: ''
        required: true
        example: et
        type: string
        custom: []
      active:
        name: active
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: false
        example: voluptates
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/providers/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the provider.'
        required: true
        example: maiores
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/providers-partial-update/{id}'
    metadata:
      title: 'Update Provider status partial data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the providers partial update.'
        required: true
        example: porro
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/paymentlogs
    metadata:
      title: |-
        getPaymentlogs converted to index
        Display a listing of the resource.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '567'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/transactions
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '566'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/admin/reports
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '565'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/service/{serviceId}/delete'
    metadata:
      title: 'Service Delete'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      serviceId:
        name: serviceId
        description: ''
        required: true
        example: similique
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/send
    metadata:
      title: 'Sending Notification'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      sender:
        name: sender
        description: ''
        required: true
        example: natus
        type: string
        custom: []
      receiver:
        name: receiver
        description: ''
        required: true
        example: autem
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Argument 1 passed to Twilio\\Jwt\\AccessToken::__construct() must be of the type string, null given, called in /var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php on line 46",
              "exception": "TypeError",
              "file": "/var/www/html/projects/linkme/api/vendor/twilio/sdk/src/Twilio/Jwt/AccessToken.php",
              "line": 21,
              "trace": [
                  {
                      "file": "/var/www/html/projects/linkme/api/app/Http/Controllers/API/CommunicationController.php",
                      "line": 46,
                      "function": "__construct",
                      "class": "Twilio\\Jwt\\AccessToken",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Controller.php",
                      "line": 54,
                      "function": "sendNotification",
                      "class": "App\\Http\\Controllers\\API\\CommunicationController",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php",
                      "line": 45,
                      "function": "callAction",
                      "class": "Illuminate\\Routing\\Controller",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
                      "line": 239,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\ControllerDispatcher",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
                      "line": 196,
                      "function": "runController",
                      "class": "Illuminate\\Routing\\Route",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 685,
                      "function": "run",
                      "class": "Illuminate\\Routing\\Route",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 128,
                      "function": "Illuminate\\Routing\\{closure}",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php",
                      "line": 41,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Routing\\Middleware\\SubstituteBindings",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php",
                      "line": 59,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Routing\\Middleware\\ThrottleRequests",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 103,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 687,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 662,
                      "function": "runRouteWithinStack",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 628,
                      "function": "runRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 617,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 165,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 128,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/app/Http/Middleware/Cors.php",
                      "line": 18,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "App\\Http\\Middleware\\Cors",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/fruitcake/laravel-cors/src/HandleCors.php",
                      "line": 52,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Fruitcake\\Cors\\HandleCors",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/fideloper/proxy/src/TrustProxies.php",
                      "line": 57,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Fideloper\\Proxy\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php",
                      "line": 63,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 167,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 103,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 140,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 109,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 299,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 287,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 89,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 45,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 222,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 179,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 116,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 123,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 80,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 56,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 55,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 37,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 93,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 37,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 596,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 134,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/symfony/console/Command/Command.php",
                      "line": 298,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 121,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/symfony/console/Application.php",
                      "line": 1024,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/symfony/console/Application.php",
                      "line": 299,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/symfony/console/Application.php",
                      "line": 171,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Console/Application.php",
                      "line": 93,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 129,
                      "function": "run",
                      "class": "Illuminate\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/html/projects/linkme/api/artisan",
                      "line": 37,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '600'
          x-ratelimit-remaining: '594'
          access-control-allow-origin: '*'
          access-control-allow-methods: '*'
          access-control-allow-headers: 'Content-Type, Authorizations'
        description: null
    responseFields: []
